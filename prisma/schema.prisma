datasource db {
  provider = "mysql"  // Измените "sqlite" на "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserLevel {
  NOVICE      // Новичок
  EXPERIENCED // Опытный
  EXPERT      // Эксперт
}

model User {
  id               Int       @id @default(autoincrement())
  name             String?   // Имя пользователя
  email            String    @unique
  password         String
  role             String    // Строка для ролей
  points           Int?      // Баллы
  companyName      String?   // Название компании
  companyBIN       String?   // БИН компании
  phoneNumber      String?   // Номер телефона пользователя
  listings         Listing[] // Связь с объявлениями
  responses        Response[] // Отклики на объявления
  city             String?   // Город пользователя
  country          String?   // Страна пользователя
  registrationDate DateTime  @default(now()) // Дата регистрации
  isCompanyVerified Boolean  @default(false) // Подтверждена ли компания
  level            UserLevel @default(NOVICE) // Уровень пользователя
}

model Listing {
  id             Int       @id @default(autoincrement())
  title          String
  content        String
  published      Boolean   @default(false)
  deliveryDate   DateTime  @default(now())
  publishedAt    DateTime  @default(now())
  expirationDate DateTime?
  purchaseDate   DateTime?
  author         User      @relation(fields: [authorId], references: [id])
  authorId       Int
  responses      Response[]
  category       Category? @relation(fields: [categoryId], references: [id]) // Обратная связь
  categoryId     Int
}

model Response {
  id          Int      @id @default(autoincrement())
  responder   User     @relation(fields: [responderId], references: [id])
  responderId Int
  message     String?  // Убедитесь, что это поле существует
  listing     Listing  @relation(fields: [listingId], references: [id])
  listingId   Int
  status      String   @default("pending") // Статус отклика (pending, approved, rejected)
  createdAt   DateTime @default(now())
  accepted    Boolean?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique // Название категории
  listings Listing[] // Связь с объявлениями
}
